<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        733v/wGbUNkw42ngwgAAAABJRU5ErkJggg==
</value>
  </data>
</root>